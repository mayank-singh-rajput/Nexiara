{"ast":null,"code":"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nconst API = token => axios.create({\n  baseURL: \"http://localhost:5000\",\n  headers: {\n    Authorization: token\n  }\n});\n_c = API;\nexport const createQuestion = async body => {\n  try {\n    const token = localStorage.getItem(\"userToken\");\n    return await API(token).post(`/create/question`, body);\n  } catch (error) {\n    console.log(\"error in create question api\");\n    toast.error(\"Something Went Wrong.try Again!\");\n  }\n};\nexport const updateQuestion = async (id, body) => {\n  try {\n    const token = localStorage.getItem(\"userToken\");\n    return await API(token).put(`/update/question/${id}`, body);\n  } catch (error) {\n    console.log(\"error in update question api\");\n    toast.error(\"Something Went Wrong.try Again!\");\n  }\n};\nexport const getQuestion = async () => {\n  try {\n    const token = localStorage.getItem(\"userToken\");\n    return await API(token).get(`/get/all/question`);\n  } catch (error) {\n    console.log(\"error in fetch question api\");\n    toast.error(\"Something Went Wrong.try Again!\");\n  }\n};\nexport const getQuestionById = async id => {\n  try {\n    const token = localStorage.getItem(\"userToken\");\n    return await API(token).get(`/get/question/${id}`);\n  } catch (error) {\n    console.log(\"error in fetch question api\");\n    toast.error(\"Something Went Wrong.try Again!\");\n  }\n};\nexport const deleteQuestion = async id => {\n  try {\n    const token = localStorage.getItem(\"userToken\");\n    return await API(token).delete(`/delete/question/${id}`);\n  } catch (error) {\n    console.log(\"error in delete question api\");\n    toast.error(\"Something Went Wrong.try Again!\");\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"API\");","map":{"version":3,"names":["axios","toast","API","token","create","baseURL","headers","Authorization","createQuestion","body","localStorage","getItem","post","error","console","log","updateQuestion","id","put","getQuestion","get","getQuestionById","deleteQuestion","delete"],"sources":["D:/Intern/Nexiara/Nexiara/Frontend/src/apis/question.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst API = (token) =>\r\n  axios.create({\r\n    baseURL: \"http://localhost:5000\",\r\n    headers: { Authorization: token },\r\n  });\r\n\r\nexport const createQuestion = async (body) => {\r\n  try {\r\n    const token = localStorage.getItem(\"userToken\");\r\n    return await API(token).post(`/create/question`, body);\r\n  } catch (error) {\r\n    console.log(\"error in create question api\");\r\n    toast.error(\"Something Went Wrong.try Again!\");\r\n  }\r\n};\r\n\r\nexport const updateQuestion = async (id, body) => {\r\n  try {\r\n    const token = localStorage.getItem(\"userToken\");\r\n    return await API(token).put(`/update/question/${id}`, body);\r\n  } catch (error) {\r\n    console.log(\"error in update question api\");\r\n    toast.error(\"Something Went Wrong.try Again!\");\r\n  }\r\n};\r\n\r\nexport const getQuestion = async () => {\r\n  try {\r\n    const token = localStorage.getItem(\"userToken\");\r\n    return await API(token).get(`/get/all/question`);\r\n  } catch (error) {\r\n    console.log(\"error in fetch question api\");\r\n    toast.error(\"Something Went Wrong.try Again!\");\r\n  }\r\n};\r\n\r\nexport const getQuestionById = async (id) => {\r\n  try {\r\n    const token = localStorage.getItem(\"userToken\");\r\n    return await API(token).get(`/get/question/${id}`);\r\n  } catch (error) {\r\n    console.log(\"error in fetch question api\");\r\n    toast.error(\"Something Went Wrong.try Again!\");\r\n  }\r\n};\r\n\r\nexport const deleteQuestion = async (id) => {\r\n  try {\r\n    const token = localStorage.getItem(\"userToken\");\r\n    return await API(token).delete(`/delete/question/${id}`);\r\n  } catch (error) {\r\n    console.log(\"error in delete question api\");\r\n    toast.error(\"Something Went Wrong.try Again!\");\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,MAAMC,GAAG,GAAIC,KAAK,IAChBH,KAAK,CAACI,MAAM,CAAC;EACXC,OAAO,EAAE,uBAAuB;EAChCC,OAAO,EAAE;IAAEC,aAAa,EAAEJ;EAAM;AAClC,CAAC,CAAC;AAAC,KAJCD,GAAG;AAMT,OAAO,MAAMM,cAAc,GAAG,MAAOC,IAAI,IAAK;EAC5C,IAAI;IACF,MAAMN,KAAK,GAAGO,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,OAAO,MAAMT,GAAG,CAACC,KAAK,CAAC,CAACS,IAAI,CAAE,kBAAiB,EAAEH,IAAI,CAAC;EACxD,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC3Cd,KAAK,CAACY,KAAK,CAAC,iCAAiC,CAAC;EAChD;AACF,CAAC;AAED,OAAO,MAAMG,cAAc,GAAG,OAAOC,EAAE,EAAER,IAAI,KAAK;EAChD,IAAI;IACF,MAAMN,KAAK,GAAGO,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,OAAO,MAAMT,GAAG,CAACC,KAAK,CAAC,CAACe,GAAG,CAAE,oBAAmBD,EAAG,EAAC,EAAER,IAAI,CAAC;EAC7D,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC3Cd,KAAK,CAACY,KAAK,CAAC,iCAAiC,CAAC;EAChD;AACF,CAAC;AAED,OAAO,MAAMM,WAAW,GAAG,YAAY;EACrC,IAAI;IACF,MAAMhB,KAAK,GAAGO,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,OAAO,MAAMT,GAAG,CAACC,KAAK,CAAC,CAACiB,GAAG,CAAE,mBAAkB,CAAC;EAClD,CAAC,CAAC,OAAOP,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC1Cd,KAAK,CAACY,KAAK,CAAC,iCAAiC,CAAC;EAChD;AACF,CAAC;AAED,OAAO,MAAMQ,eAAe,GAAG,MAAOJ,EAAE,IAAK;EAC3C,IAAI;IACF,MAAMd,KAAK,GAAGO,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,OAAO,MAAMT,GAAG,CAACC,KAAK,CAAC,CAACiB,GAAG,CAAE,iBAAgBH,EAAG,EAAC,CAAC;EACpD,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC1Cd,KAAK,CAACY,KAAK,CAAC,iCAAiC,CAAC;EAChD;AACF,CAAC;AAED,OAAO,MAAMS,cAAc,GAAG,MAAOL,EAAE,IAAK;EAC1C,IAAI;IACF,MAAMd,KAAK,GAAGO,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,OAAO,MAAMT,GAAG,CAACC,KAAK,CAAC,CAACoB,MAAM,CAAE,oBAAmBN,EAAG,EAAC,CAAC;EAC1D,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC3Cd,KAAK,CAACY,KAAK,CAAC,iCAAiC,CAAC;EAChD;AACF,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}